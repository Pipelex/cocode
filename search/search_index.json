{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cocode","text":"<p>Repository analysis and AI-powered code understanding.</p>"},{"location":"#what-it-does","title":"What it does","text":"<ul> <li>Analyze repositories - Convert code to text formats for analysis</li> <li>Extract Python interfaces - Get signatures, imports, or full code</li> <li>AI analysis - Generate docs, changelogs, and insights using LLMs</li> <li>Git integration - Analyze diffs and track changes</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install cocode\n</code></pre> <p>Set your OpenAI API key: <pre><code>echo \"OPENAI_API_KEY=sk-...\" &gt; .env\n</code></pre></p>"},{"location":"#quick-example","title":"Quick example","text":"<pre><code># Analyze current directory\ncocode repox\n\n# Extract Python interfaces\ncocode repox --python-rule interface --include-pattern \"*.py\"\n\n# Generate project overview with AI\ncocode swe-from-repo extract_fundamentals .\n</code></pre>"},{"location":"#learn-more","title":"Learn more","text":"<ul> <li>Getting Started - Installation and setup</li> <li>Commands - All available commands</li> <li>Examples - Common use cases</li> </ul> <p>GitHub | Discord | PyPI</p>"},{"location":"CODE_OF_CONDUCT/","title":"Code of Conduct","text":"<p>Please see the Code of Conduct for our community guidelines.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v050-2025-10-27","title":"[v0.5.0] - 2025-10-27","text":"<ul> <li>Bump <code>pipelex</code> to <code>v0.14.0</code>: See <code>Pipelex</code> changelog here</li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Documentation Improvements: Overhauled <code>README.md</code> with a new \"Get Your API Keys\" section outlining three configuration methods (free <code>PIPELEX_API_KEY</code>, bring-your-own provider keys, or local AI models). Updated terminology from \"AI-powered pipelines\" to \"AI-powered workflows\".</li> </ul>"},{"location":"changelog/#removed","title":"Removed","text":"<ul> <li>Removed unused <code>is_activity_tracking_enabled</code> option from <code>pipelex.toml</code> configuration files.</li> <li>Removed <code>reportConstantRedescription</code> and <code>reportShadowedImports</code> linter rules from <code>pyproject.toml</code>.</li> </ul>"},{"location":"changelog/#v040-2025-10-21","title":"[v0.4.0] - 2025-10-21","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Multiplicity syntax: Introduced bracket notation for defining input/output multiplicity in <code>.plx</code> files: <code>TypeName[]</code> for variable items, <code>TypeName[N]</code> for fixed count (e.g., <code>output = \"Idea[]\"</code> or <code>output = \"Image[3]\"</code>)</li> <li><code>git</code> pipeline domain: Created <code>git.plx</code> file to house <code>git.GitDiff</code> concept and related pipelines</li> </ul>"},{"location":"changelog/#changed_1","title":"Changed","text":"<ul> <li>Upgraded Pipelex: Updated core dependency from <code>0.12.0</code> to <code>0.13.0</code> to support new multiplicity syntax</li> <li>API simplification: Renamed <code>execute_pipeline</code> parameter <code>input_memory</code> to <code>inputs</code>, internal type <code>ImplicitMemory</code> to <code>PipelineInputs</code>, and model alias <code>llm_to_reason</code> to <code>llm_for_complex_reasoning</code></li> <li>Pipeline organization: Refactored monolithic <code>swe_diff.plx</code> into focused files (<code>git.plx</code>, <code>write_changelog_enhanced.plx</code>). Moved and renamed <code>swe_diff.GitDiff</code> to <code>git.GitDiff</code></li> <li>Changelog generation: The <code>changelog update</code> command now uses the <code>write_changelog_enhanced</code> pipeline</li> <li>Documentation: Updated all docs (<code>README.md</code>, <code>AGENTS.md</code>, AI instruction files) to reflect new multiplicity syntax and naming conventions</li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Execution context: Added note to <code>README.md</code> clarifying that <code>cocode</code> must be run from the project's root directory</li> </ul>"},{"location":"changelog/#removed_1","title":"Removed","text":"<ul> <li>Legacy multiplicity parameters: Removed <code>nb_output</code> and <code>multiple_output</code> parameters, replaced by bracket notation</li> </ul>"},{"location":"changelog/#v030-2025-10-15","title":"[v0.3.0] - 2025-10-15","text":""},{"location":"changelog/#highlights","title":"Highlights","text":"<ul> <li>Bump <code>pipelex</code> to <code>v0.12.0</code>: See <code>Pipelex</code> changelog here</li> <li>Major overhaul of Pipelex language syntax and inference configuration system</li> </ul>"},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li><code>analyze</code> command for analyzing git diffs with custom prompts</li> <li>Migration guide for upgrading to v0.3.0</li> <li>Granular documentation guides: <code>write_pipelex.mdc</code>, <code>python_standards.mdc</code>, <code>run_pipelex.mdc</code></li> <li>Inference backend configurations for <code>google</code></li> </ul>"},{"location":"changelog/#changed_2","title":"Changed","text":"<ul> <li>Breaking: Overhauled Pipelex language syntax: <code>definition</code> \u2192 <code>description</code>, <code>llm</code> \u2192 <code>model</code>, <code>prompt_template</code> \u2192 <code>prompt</code>, <code>PipeOcr</code> \u2192 <code>PipeExtract</code>, <code>PipeJinja2</code> \u2192 <code>PipeCompose</code></li> <li>Breaking: Revamped inference configuration to structured backend system in <code>.pipelex/inference/</code></li> <li>Breaking: Renamed CLI flag <code>--ignore-pattern</code> \u2192 <code>--exclude-pattern</code></li> <li>Renamed <code>pipelex_libraries</code> directory \u2192 <code>pipelines</code></li> <li>Updated test markers: <code>ocr</code> \u2192 <code>extract</code>, <code>imgg</code> \u2192 <code>img_gen</code></li> <li>Default routing profile changed to <code>pipelex_first</code></li> </ul>"},{"location":"changelog/#removed_2","title":"Removed","text":"<ul> <li>Monolithic rule files (replaced with specific guides)</li> <li>Legacy <code>base_library</code> pipelines (functionality moved to core)</li> <li><code>init</code> and <code>reinitbaselibrary</code> Makefile commands</li> <li><code>base_templates.toml</code> (contents integrated into core)</li> </ul>"},{"location":"changelog/#v023-2025-09-22","title":"[v0.2.3] - 2025-09-22","text":""},{"location":"changelog/#changed_3","title":"Changed","text":"<ul> <li>Cleaned cli commands.</li> </ul>"},{"location":"changelog/#v022-2025-09-18","title":"[v0.2.2] - 2025-09-18","text":""},{"location":"changelog/#highlights_1","title":"Highlights","text":"<ul> <li>Bump <code>pipelex</code> to <code>v0.10.2</code>: See <code>Pipelex</code> changelog here</li> </ul>"},{"location":"changelog/#added_2","title":"Added","text":"<ul> <li>Comprehensive inference backend configuration system supporting Anthropic, Azure OpenAI, Bedrock, BlackboxAI, Mistral, Ollama, OpenAI, Perplexity, VertexAI, and XAI</li> <li>New model deck system with routing profiles for model-to-backend management</li> <li>Support for latest AI models: Claude 4 (sonnet, opus, 4.1-opus), GPT-5 (standard, mini, nano, chat), O3/O4, Grok-3, and Gemini 2.5</li> <li>Model aliases system with cost tracking and input/output type specifications</li> </ul>"},{"location":"changelog/#changed_4","title":"Changed","text":"<ul> <li>Migrated from LLM deck to model deck system with backend-specific configurations</li> <li>Restructured configuration from <code>cocode/pipelex_libraries</code> to <code>.pipelex</code> directory</li> <li>Updated model naming conventions and pipeline configurations</li> </ul>"},{"location":"changelog/#removed_3","title":"Removed","text":"<ul> <li>Legacy LLM integrations and individual provider files (anthropic.toml, openai.toml, etc.)</li> <li>Old configuration files: plugin_config.toml, preferred_platforms, ocr_handles, llm_external_handles</li> </ul>"},{"location":"changelog/#v021-2025-09-06","title":"[v0.2.1] - 2025-09-06","text":""},{"location":"changelog/#changed_5","title":"Changed","text":"<ul> <li>Bump <code>pipelex</code> to <code>v0.9.4</code>: See <code>Pipelex</code> changelog here</li> <li>Support BlackboxAI endpoints for inference</li> </ul>"},{"location":"changelog/#v020-2025-09-06","title":"[v0.2.0] - 2025-09-06","text":""},{"location":"changelog/#added_3","title":"Added","text":"<ul> <li>Command group structure with <code>app.add_typer()</code> for better CLI organization</li> <li><code>cocode/common.py</code> module with shared utilities (<code>PipeCode</code> enum, <code>validate_repo_path()</code>, <code>get_output_dir()</code>)</li> <li>Alternative command names for flexibility (e.g., <code>repox repo</code> alongside <code>repox convert</code>)</li> <li>GitHub repository support for analyzing both local and remote repositories</li> <li>Smart caching system for GitHub repositories with local storage</li> <li>GitHub authentication support via Personal Access Tokens (PAT) and GitHub CLI</li> <li>Private repository access with proper authentication</li> <li>Shallow cloning for faster repository analysis</li> <li>Branch-specific repository analysis support</li> <li>Multiple GitHub URL format support (short format, HTTPS, SSH, branch-specific)</li> <li>Force refresh functionality for cached repositories</li> <li>Temporary directory mode for GitHub repository cloning</li> <li>Cache cleanup functionality for old repositories</li> <li>Comprehensive GitHub repository manager with <code>GitHubRepoManager</code> class</li> <li>Integration tests for GitHub functionality</li> <li>Unit tests for GitHub repository manager</li> <li>Enhanced CLI documentation with GitHub repository examples</li> </ul>"},{"location":"changelog/#changed_6","title":"Changed","text":"<ul> <li>Major CLI restructuring: Reorganized flat command structure into logical command groups for better organization and maintainability</li> <li><code>repox</code> \u2192 <code>repox convert</code> (repository processing commands)</li> <li><code>swe-*</code> commands \u2192 <code>swe *</code> subcommands (e.g., <code>swe-from-repo</code> \u2192 <code>swe from-repo</code>)</li> <li><code>validate</code> \u2192 <code>validation validate</code> (with additional <code>validation dry-run</code> and <code>validation check-config</code> options)</li> <li>Improved CLI architecture: Extracted command implementations from main CLI module into co-located packages (<code>cocode/repox/repox_cli.py</code>, <code>cocode/swe/swe_cli.py</code>, etc.) for better code organization</li> <li>Updated documentation: All examples and references updated to reflect new command structure</li> <li>Repository path validation now supports both local paths and GitHub URLs</li> <li>All SWE commands now support GitHub repository analysis in addition to local repositories</li> <li>CLI help text updated to reflect GitHub repository support</li> <li>Command descriptions enhanced with GitHub repository examples</li> </ul>"},{"location":"changelog/#removed_4","title":"Removed","text":"<ul> <li>Direct command implementations from main CLI module (moved to dedicated CLI modules)</li> </ul>"},{"location":"changelog/#deprecated","title":"Deprecated","text":"<ul> <li>Direct <code>cocode validate</code> command (still works but shows deprecation notice; use <code>cocode validation validate</code> instead)</li> </ul>"},{"location":"changelog/#security","title":"Security","text":"<ul> <li>GitHub authentication support with secure token handling</li> <li>Private repository access with proper credential management</li> </ul>"},{"location":"changelog/#v013-2025-09-06","title":"[v0.1.3] - 2025-09-06","text":""},{"location":"changelog/#added_4","title":"Added","text":"<ul> <li>Better support for BlackboxAI IDE</li> <li>VS Code extensions recommendations file with Pipelex, Ruff, and MyPy extensions</li> <li>File association for .plx files in VS Code settings</li> <li>Bump <code>pipelex</code> to <code>v0.9.3</code>: See <code>Pipelex</code> changelog here</li> </ul>"},{"location":"changelog/#v012-2025-09-03","title":"[v0.1.2] - 2025-09-03","text":""},{"location":"changelog/#changed_7","title":"Changed","text":"<ul> <li>Deactivated pipeline tracking and activity tracking in <code>pipelex.toml</code>.</li> <li>Added IDE extension link to <code>README.md</code>.</li> </ul>"},{"location":"changelog/#v011-2025-09-02","title":"[v0.1.1] - 2025-09-02","text":""},{"location":"changelog/#added_5","title":"Added","text":"<ul> <li>Added demo video to README.md</li> </ul>"},{"location":"changelog/#v010-2025-09-02","title":"[v0.1.0] - 2025-09-02","text":""},{"location":"changelog/#changed_8","title":"Changed","text":"<ul> <li>Bump <code>pipelex</code> to <code>v0.9.0</code>: See <code>Pipelex</code> changelog here</li> <li>Switched from <code>TOML</code> to <code>PLX</code> for pipeline definitions.</li> </ul>"},{"location":"changelog/#v0015-2025-08-29","title":"[v0.0.15] - 2025-08-29","text":""},{"location":"changelog/#changed_9","title":"Changed","text":"<ul> <li>Fixed <code>typing_extensions</code> import error in <code>cocode/pipelex_libraries/pipelines/swe_diff/swe_diff.py</code> to use <code>typing_extensions</code> instead of <code>typing</code>.</li> </ul>"},{"location":"changelog/#v0014-2025-08-29","title":"[v0.0.14] - 2025-08-29","text":""},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>Fixed <code>StrEnum</code> import error in <code>cocode/cli.py</code> and <code>cocode/repox/process_python.py</code> to use <code>pipelex.types.StrEnum</code> instead of <code>enum.StrEnum</code>.</li> </ul>"},{"location":"changelog/#v0013-2025-08-27","title":"[v0.0.13] - 2025-08-27","text":""},{"location":"changelog/#changed_10","title":"Changed","text":"<ul> <li>Bump <code>pipelex</code> to <code>v0.8.1</code>: See <code>Pipelex</code> changelog here</li> </ul>"},{"location":"changelog/#v0012-2025-08-21","title":"[v0.0.12] - 2025-08-21","text":""},{"location":"changelog/#changed_11","title":"Changed","text":"<ul> <li>Bump <code>pipelex</code> to <code>v0.7.0</code>: See <code>Pipelex</code> changelog here</li> </ul>"},{"location":"changelog/#v0011-2025-08-02","title":"[v0.0.11] - 2025-08-02","text":""},{"location":"changelog/#added_6","title":"Added","text":"<ul> <li>Added comprehensive changelog generation pipeline (<code>write_changelog_enhanced</code>) with three-stage processing: draft generation, polishing, and markdown formatting</li> <li>Added <code>DraftChangelog</code> concept definition for intermediate changelog processing</li> <li>Added AI-powered <code>draft_changelog_from_git_diff</code> pipe that analyzes code diffs using LLM to extract changes, improvements, and features</li> <li>Added <code>polish_changelog</code> pipe that removes redundancy, groups related changes, and applies markdown formatting</li> </ul>"},{"location":"changelog/#v0010-2025-08-02","title":"[v0.0.10] - 2025-08-02","text":""},{"location":"changelog/#changed_12","title":"Changed","text":"<ul> <li>Default output file extension changed from .txt to .md for SWE diff analysis</li> <li>Pipelex dependency constraint relaxed from exact version 0.6.9 to minimum version &gt;=0.6.9</li> <li>Jinja2 template formatting improved with consistent indentation for changelog sections</li> </ul>"},{"location":"changelog/#v009-2025-07-26","title":"[v0.0.9] - 2025-07-26","text":"<ul> <li>Updated pipelex dependency from version 0.6.8 to 0.6.9</li> </ul>"},{"location":"changelog/#added_7","title":"Added","text":"<ul> <li>README example for new CLI command <code>swe-ai-instruction-update</code> for updating AI instruction files</li> <li>New PipeCode enum values for extraction and documentation operations: EXTRACT_FUNDAMENTALS, EXTRACT_ENVIRONMENT_BUILD, EXTRACT_CODING_STANDARDS, EXTRACT_TEST_STRATEGY, EXTRACT_COLLABORATION, DOC_PROOFREAD, DOC_UPDATE, AI_INSTRUCTION_UPDATE</li> </ul>"},{"location":"changelog/#changed_13","title":"Changed","text":"<ul> <li>Simplified pipeline input handling to use inputs instead of working_memory pattern</li> <li>Updated pipeline type definitions from CodeDiff to git.GitDiff for better naming consistency</li> <li>Switched default LLM model from gpt-4o to claude-4-sonnet for software engineering tasks</li> <li>Polished code related to cursor rules file detection with support for .cursor/rules directory pattern, using failable_load_text_from_path for better error handling</li> </ul>"},{"location":"changelog/#fixed_2","title":"Fixed","text":"<ul> <li>Corrected typo in documentation update prompt template ('inclide' to 'include')</li> <li>Removed redundant doc_dir parameter from AI instruction update command</li> <li>Cleaned up unused to_stdout parameter from doc proofread command</li> </ul>"},{"location":"changelog/#v008-2025-07-25","title":"[v0.0.8] - 2025-07-25","text":""},{"location":"changelog/#added_8","title":"Added","text":"<ul> <li><code>NoDifferencesFound</code> exception class for handling cases where no differences are found in git diff.</li> </ul>"},{"location":"changelog/#changed_14","title":"Changed","text":"<ul> <li>Modified <code>swe_diff.plx</code> to reflect changes in pipeline steps and inputs/outputs.</li> <li>Refactored CLI commands to use <code>PipeRunMode</code> instead of <code>dry_run</code>.</li> </ul>"},{"location":"changelog/#removed_5","title":"Removed","text":"<ul> <li>Moved utility code from <code>swe_cmd.py</code> to <code>swe_utils.py</code>.</li> </ul>"},{"location":"changelog/#v007-2025-07-24","title":"[v0.0.7] - 2025-07-24","text":""},{"location":"changelog/#added_9","title":"Added","text":"<ul> <li>New pipeline for proofreading documentation: <code>cocode swe-doc-proofread . --doc-dir docs</code></li> </ul>"},{"location":"changelog/#changed_15","title":"Changed","text":"<ul> <li>Updated dependencies to <code>pipelex</code> version <code>v0.6.6</code>. See full <code>Pipelex</code> changelog here.</li> <li>Updated LLM configurations in <code>cocode_deck.toml</code> and <code>vertexai.toml</code> files.</li> </ul>"},{"location":"changelog/#v006-2025-07-18","title":"[v0.0.6] - 2025-07-18","text":""},{"location":"changelog/#added_10","title":"Added","text":"<ul> <li>New pipeline for updating documentation based on <code>git diff</code> analysis.</li> <li>New pipeline for updating AI instruction files based on <code>git diff</code> analysis.</li> </ul>"},{"location":"changelog/#changed_16","title":"Changed","text":"<ul> <li>Updated dependencies to <code>pipelex</code> version <code>0.6.3</code>.</li> <li>Modified the <code>Makefile</code> to include new commands for installing the latest dependencies and initializing libraries.</li> </ul>"},{"location":"changelog/#v005-2025-07-15","title":"[v0.0.5] - 2025-07-15","text":"<ul> <li>Added the <code>pipelex_libraries</code> folder to the project</li> <li>Added <code>/pipelex_libraries</code> to <code>.gitignore</code></li> <li>Moved <code>data/github/example_labels.json</code> to <code>tests/data/github/example_labels.json</code></li> </ul>"},{"location":"changelog/#v004-2025-07-15","title":"[v0.0.4] - 2025-07-15","text":"<ul> <li>Added GHA for publishing to PyPI, changelog check, doc deployment, and more</li> </ul>"},{"location":"changelog/#v003-2025-07-15","title":"[v0.0.3] - 2025-07-15","text":""},{"location":"changelog/#added_11","title":"Added","text":"<ul> <li>New GitHub integration module (based on PyGithub) for cocode with commands for authentication, branch checking, repository info, and label syncing</li> <li>New issue templates for bug reports, feature requests, and general issues in GitHub</li> <li>New documentation pages including Getting Started, Commands, Examples, and Contributing</li> </ul>"},{"location":"changelog/#changed_17","title":"Changed","text":"<ul> <li>Updated Makefile to include new documentation commands for serving, checking, and deploying documentation with mkdocs</li> <li>Enhanced CLI with new command group for GitHub-related operations</li> </ul>"},{"location":"changelog/#v002-2025-07-11","title":"[v0.0.2] - 2025-07-11","text":""},{"location":"changelog/#added_12","title":"Added","text":"<ul> <li>Added <code>CLA.md</code>, <code>CONTRIBUTING.md</code>, and <code>CODE_OF_CONDUCT.md</code>.</li> </ul>"},{"location":"changelog/#changed_18","title":"Changed","text":"<ul> <li>Fresh new look for the CLI: better helpers, sub commands, and more</li> </ul>"},{"location":"changelog/#fixed_3","title":"Fixed","text":"<ul> <li>Fixed the dry run of <code>pipelex</code></li> <li>Removed implementation of the <code>system</code> as in <code>pipelex</code>.</li> </ul>"},{"location":"changelog/#v001-2025-07-09","title":"[v0.0.1] - 2025-07-09","text":"<ul> <li>Initial release</li> </ul>"},{"location":"contributing/","title":"Contributing to Cocode","text":"<p>Thank you for your interest in contributing! Contributions are very welcome. We appreciate first time contributors and we are happy help you get started. Join our community on Discord and feel free to reach out with questions in the #code-contributions and #pipeline-contributions channels.</p> <p>Everyone interacting in Discord, codebases, mailing lists, events, or any other Pipelex activities is expected to follow the Code of Conduct. Please review it before getting started.</p> <p>Most of the issues that are open for contributions are tagged with <code>good first issue</code> or <code>help-welcome</code>. If you see an issue that isn't tagged that you're interested in, post a comment with your approach, and we'll be happy to assign it to you. If you submit a fix that isn't linked to an issue you're assigned, there's chance it won't be accepted. Don't hesitate to ping the Pipelex team on Discord to discuss your choice of issue before getting to work.</p> <p>We are open to contributions in all areas of our core cocode library:</p> <ul> <li>Bug fixes: Crashes, incorrect output, performance issues</li> <li>Feature: New API, CLI flag, module, test coverage</li> <li>Refactor: Rethink architecture</li> <li>Chore: Dependency updates, config tweaks, file renames</li> <li>Docs: Main docs, SWE Agent rules, tutorials, examples, READMEs</li> <li>CI/CD: GitHub Actions, packaging, release tooling</li> </ul>"},{"location":"contributing/#contribution-process","title":"Contribution process","text":"<ul> <li>Fork the cocode repository</li> <li>Clone the repository locally</li> <li>Install dependencies: <code>make install</code> (creates .venv and installs dependencies)</li> <li>Copy <code>.env.example</code> to <code>.env</code> and fill in required API keys (at least OpenAI)</li> <li>Run checks to make sure all is good: <code>make check</code> &amp; <code>make test</code></li> <li>Create a branch with the format user_name/category/short_slug where category is one of: <code>feature</code>, <code>fix</code>, <code>refactor</code>, <code>docs</code>, <code>cicd</code> or <code>chore</code></li> <li>Make and commit changes</li> <li>Push your local branch to your fork</li> <li>Open a PR that links to an existing Issue which does not include the <code>needs triage</code> label</li> <li>Write a PR title and description by filling the template</li> <li>CI tests will be triggered and maintainers will review the code</li> <li>Respond to feedback if required</li> <li>Merge the contribution</li> </ul>"},{"location":"contributing/#requirements","title":"Requirements","text":"<ul> <li>Python \u22653.10</li> <li>uv \u2265 0.7.2</li> </ul>"},{"location":"contributing/#development-setup","title":"Development Setup","text":"<ul> <li>Fork &amp; clone the repository</li> <li>Run <code>make install</code> to set up virtualenv and dependencies</li> <li>Copy <code>.env.example</code> to <code>.env</code> and configure API keys</li> <li>Use uv for dependency management:</li> <li>Runtime deps: <code>uv pip install &lt;package&gt;</code></li> <li>Dev deps: <code>uv pip install --extra dev &lt;package&gt;</code></li> <li>Keep dependencies alphabetically ordered in pyproject.toml</li> </ul>"},{"location":"contributing/#pull-request-process","title":"Pull Request Process","text":"<ul> <li>Fork the cocode repository</li> <li>Clone the repository locally</li> <li>Install dependencies: <code>make install</code> (creates .venv and installs dependencies)</li> <li>Copy <code>.env.example</code> to <code>.env</code> and fill in required API keys (at least OpenAI)</li> <li>Run checks to make sure all is good: <code>make check</code> &amp; <code>make test</code></li> <li>Create a branch for your feature/bug-fix with the format user_name/feature/some_feature or user_name/fix/some_bugfix</li> <li>Make and commit changes</li> <li>Push your local branch to your fork</li> <li>When it's ready, re-run quality tests:</li> <li>Run <code>make fix-unused-imports</code> to removed unused imports</li> <li>Run <code>make check</code> for formatting &amp; linting with Ruff, and type-checking with Pyright and Mypy</li> <li>Run <code>make test</code> for test suite</li> <li>Open a PR that links to an existing Issue including a PR title and description</li> <li>Mark as Draft until CI passes</li> <li>Maintainers will review the code</li> <li>Respond to feedback if required</li> <li>Merge the contribution</li> </ul>"},{"location":"contributing/#environment-setup","title":"Environment Setup","text":"<ul> <li>Copy <code>.env.example</code> to <code>.env</code></li> <li>Fill in required credentials (OPENAI_API_KEY, AWS_ACCESS_KEY_ID, etc.)</li> <li>Never commit <code>.env</code></li> </ul>"},{"location":"contributing/#license","title":"License","text":"<ul> <li>CLA \u2013 The first time you open a PR, the CLA-assistant bot will guide you through signing the Contributor License Agreement. The process signature uses the CLA assistant lite.</li> <li>Code of Conduct \u2013 Be kind. All interactions fall under <code>CODE_OF_CONDUCT.md</code>.</li> </ul>"},{"location":"license/","title":"License","text":"<pre><code>MIT License\n\nCopyright (c) 2025 Evotis S.A.S.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre>"},{"location":"pages/commands/","title":"Commands","text":"<p>CoCode uses organized command groups for better structure:</p> <ul> <li><code>repox</code> - Repository processing commands</li> <li><code>swe</code> - Software Engineering analysis commands  </li> <li><code>validation</code> - Pipeline validation commands</li> <li><code>github</code> - GitHub repository management</li> </ul>"},{"location":"pages/commands/#repox","title":"repox","text":"<p>Convert repository to text format.</p> <pre><code>cocode repox convert [OPTIONS] [REPO_PATH]\ncocode repox repo [OPTIONS] [REPO_PATH]  # Alternative command name\n</code></pre> <p>Options:</p> <ul> <li><code>-o, --output-dir</code> - Output directory (default: <code>./results/</code>, use <code>stdout</code> for console)</li> <li><code>-n, --output-filename</code> - Output filename</li> <li><code>-i, --exclude-pattern</code> - Gitignore patterns to exclude (repeatable)</li> <li><code>-r, --include-pattern</code> - Glob patterns to include (repeatable)</li> <li><code>-pp, --path-pattern</code> - Regex for path filtering</li> <li><code>-p, --python-rule</code> - Python processing: <code>interface</code>, <code>imports</code>, <code>integral</code></li> <li><code>-s, --output-style</code> - Output format: <code>repo_map</code>, <code>flat</code>, <code>tree</code>, <code>import_list</code></li> </ul>"},{"location":"pages/commands/#swe-from-repo","title":"swe from-repo","text":"<p>Analyze repository with AI pipelines.</p> <pre><code>cocode swe from-repo [OPTIONS] PIPE_CODE REPO_PATH\n</code></pre> <p>Pipelines:</p> <ul> <li><code>extract_fundamentals</code> - Project overview</li> <li><code>extract_onboarding_documentation</code> - Onboarding docs</li> <li><code>extract_environment_build</code> - Build setup</li> <li><code>extract_coding_standards</code> - Code standards</li> <li><code>extract_test_strategy</code> - Testing approach</li> <li><code>extract_collaboration</code> - Team workflows</li> </ul> <p>Options:</p> <ul> <li><code>-o, --output-dir</code> - Output directory</li> <li><code>-n, --output-filename</code> - Output filename</li> <li><code>--dry</code> - Dry run without API calls</li> <li>Plus all filtering options from <code>repox</code></li> </ul>"},{"location":"pages/commands/#swe-from-file","title":"swe from-file","text":"<p>Process text file with AI pipelines.</p> <pre><code>cocode swe from-file [OPTIONS] PIPE_CODE INPUT_FILE\n</code></pre> <p>Pipelines:</p> <ul> <li><code>extract_features_recap</code> - Summarize features</li> <li><code>extract_fundamentals</code> - Extract project info</li> <li><code>extract_onboarding_documentation</code> - Structure docs</li> </ul>"},{"location":"pages/commands/#swe-from-repo-diff","title":"swe from-repo-diff","text":"<p>Analyze git diffs with AI.</p> <pre><code>cocode swe from-repo-diff [OPTIONS] PIPE_CODE GIT_REF REPO_PATH\n</code></pre> <p>Main pipeline:</p> <ul> <li><code>write_changelog</code> - Generate changelog</li> </ul> <p>Git references:</p> <ul> <li>Tags: <code>v1.0.0</code></li> <li>Commits: <code>abc123</code></li> <li>Ranges: <code>v1.0.0..v2.0.0</code></li> <li>Relative: <code>HEAD~10</code></li> </ul>"},{"location":"pages/commands/#swe-doc-proofread","title":"swe doc-proofread","text":"<p>Proofread documentation against codebase to detect inconsistencies.</p> <pre><code>cocode swe doc-proofread [OPTIONS] REPO_PATH\n</code></pre> <p>Purpose: Detect critical inconsistencies between documentation and actual codebase that could break user code.</p> <p>Options:</p> <ul> <li><code>--doc-dir</code> - Documentation directory to analyze (default: <code>docs</code>)</li> <li><code>-o, --output-dir</code> - Output directory (default: <code>./results/</code>)</li> <li><code>-n, --output-filename</code> - Output filename</li> <li><code>--dry</code> - Dry run without API calls</li> <li>Plus all filtering options from <code>repox</code></li> </ul>"},{"location":"pages/commands/#github","title":"github","text":"<p>GitHub repository management commands.</p>"},{"location":"pages/commands/#github-auth","title":"github auth","text":"<p>Check GitHub authentication status.</p> <pre><code>cocode github auth\n</code></pre> <p>Displays authenticated user info and API rate limits.</p>"},{"location":"pages/commands/#github-repo-info","title":"github repo-info","text":"<p>Get repository information.</p> <pre><code>cocode github repo-info REPO\n</code></pre> <p>Arguments: - <code>REPO</code> - Repository as <code>owner/repo</code> or repository ID</p>"},{"location":"pages/commands/#github-check-branch","title":"github check-branch","text":"<p>Check if a branch exists.</p> <pre><code>cocode github check-branch REPO BRANCH\n</code></pre> <p>Arguments: - <code>REPO</code> - Repository as <code>owner/repo</code> or repository ID - <code>BRANCH</code> - Branch name to check</p>"},{"location":"pages/commands/#github-list-branches","title":"github list-branches","text":"<p>List repository branches.</p> <pre><code>cocode github list-branches [OPTIONS] REPO\n</code></pre> <p>Arguments: - <code>REPO</code> - Repository as <code>owner/repo</code> or repository ID</p> <p>Options: - <code>--limit</code> - Maximum branches to show (default: 10)</p>"},{"location":"pages/commands/#github-sync-labels","title":"github sync-labels","text":"<p>Sync issue labels from JSON file.</p> <pre><code>cocode github sync-labels [OPTIONS] REPO LABELS_FILE\n</code></pre> <p>Arguments: - <code>REPO</code> - Repository as <code>owner/repo</code> or repository ID - <code>LABELS_FILE</code> - JSON file with label definitions</p> <p>Options: - <code>--dry-run</code> - Preview changes without applying - <code>--delete-extra</code> - Remove labels not in JSON file</p> <p>Label JSON format: <pre><code>[\n  {\n    \"name\": \"bug\",\n    \"color\": \"d73a4a\",\n    \"description\": \"Something isn't working\"\n  }\n]\n</code></pre></p>"},{"location":"pages/commands/#swe-doc-update","title":"swe doc-update","text":"<p>Update documentation based on code changes.</p> <pre><code>cocode swe doc-update [OPTIONS] GIT_REF REPO_PATH\n</code></pre> <p>Purpose: Automatically update docs and README files based on releases and code changes.</p> <p>Git references:</p> <ul> <li>Tags: <code>v1.0.0</code></li> <li>Commits: <code>abc123</code></li> <li>Ranges: <code>v1.0.0..v2.0.0</code></li> <li>Relative: <code>HEAD~10</code></li> </ul> <p>Options:</p> <ul> <li><code>-o, --output-dir</code> - Output directory (default: <code>./results/</code>)</li> <li><code>-n, --output-filename</code> - Output filename</li> <li><code>--dry</code> - Dry run without API calls</li> </ul>"},{"location":"pages/commands/#github-commands","title":"GitHub commands","text":"<p>GitHub-related operations and utilities.</p>"},{"location":"pages/commands/#github-auth_1","title":"github auth","text":"<p>Check GitHub authentication status.</p> <pre><code>cocode github auth\n</code></pre> <p>Shows current authenticated user, rate limit info, and validates API access.</p>"},{"location":"pages/commands/#github-check-branch_1","title":"github check-branch","text":"<p>Check if a branch exists in a GitHub repository.</p> <pre><code>cocode github check-branch REPO BRANCH\n</code></pre> <p>Arguments: - <code>REPO</code> - Repository in format 'owner/repo' or repo ID - <code>BRANCH</code> - Branch name to check</p>"},{"location":"pages/commands/#github-repo-info_1","title":"github repo-info","text":"<p>Get basic information about a GitHub repository.</p> <pre><code>cocode github repo-info REPO\n</code></pre> <p>Arguments: - <code>REPO</code> - Repository in format 'owner/repo' or repo ID</p> <p>Shows repository details including description, language, stars, forks, and creation date.</p>"},{"location":"pages/commands/#github-list-branches_1","title":"github list-branches","text":"<p>List branches in a GitHub repository.</p> <pre><code>cocode github list-branches [OPTIONS] REPO\n</code></pre> <p>Arguments: - <code>REPO</code> - Repository in format 'owner/repo' or repo ID</p> <p>Options: - <code>-l, --limit</code> - Maximum number of branches to show (default: 10)</p>"},{"location":"pages/commands/#github-sync-labels_1","title":"github sync-labels","text":"<p>Sync labels to a GitHub repository from a JSON file.</p> <pre><code>cocode github sync-labels [OPTIONS] REPO LABELS_FILE\n</code></pre> <p>Arguments: - <code>REPO</code> - Repository in format 'owner/repo' or repo ID - <code>LABELS_FILE</code> - Path to JSON file containing labels to sync</p> <p>Options: - <code>--dry-run</code> - Show what would be done without making changes - <code>--delete-extra</code> - Delete labels not in the standard set</p>"},{"location":"pages/commands/#other-commands","title":"Other commands","text":"<ul> <li><code>cocode validate</code> - Check setup</li> <li><code>cocode help</code> - Show help </li> </ul>"},{"location":"pages/examples/","title":"Examples","text":""},{"location":"pages/examples/#code-analysis","title":"Code analysis","text":""},{"location":"pages/examples/#extract-python-api","title":"Extract Python API","text":"<pre><code># Get all Python interfaces\ncocode repox --python-rule interface --include-pattern \"*.py\" \\\n  --output-filename api.txt\n\n# Focus on source directory\ncocode repox --path-pattern \"src\" --python-rule interface \\\n  --include-pattern \"*.py\" --output-filename src-api.txt\n</code></pre>"},{"location":"pages/examples/#analyze-dependencies","title":"Analyze dependencies","text":"<pre><code># Extract all imports\ncocode repox --python-rule imports --output-style import_list \\\n  --include-pattern \"*.py\" --output-filename dependencies.txt\n</code></pre>"},{"location":"pages/examples/#documentation-only","title":"Documentation only","text":"<pre><code># Extract all markdown files\ncocode repox --include-pattern \"*.md\" --output-style flat \\\n  --output-filename docs.txt\n</code></pre>"},{"location":"pages/examples/#ai-workflows","title":"AI workflows","text":""},{"location":"pages/examples/#project-overview","title":"Project overview","text":"<pre><code># Generate project fundamentals\ncocode swe-from-repo extract_fundamentals . \\\n  --output-filename overview.json\n\n# From specific docs\ncocode swe-from-repo extract_fundamentals . \\\n  --include-pattern \"*.md\" --include-pattern \"*.plx\" \\\n  --output-filename project-info.json\n</code></pre>"},{"location":"pages/examples/#generate-changelog","title":"Generate changelog","text":"<pre><code># From last version\ncocode swe-from-repo-diff write_changelog v1.0.0 . \\\n  --output-filename CHANGELOG.md\n\n# Recent changes\ncocode swe-from-repo-diff write_changelog HEAD~10 . \\\n  --output-filename recent.md\n\n# Between branches\ncocode swe-from-repo-diff write_changelog main..feature/new-api . \\\n  --output-filename feature-changes.md\n</code></pre>"},{"location":"pages/examples/#feature-summary","title":"Feature summary","text":"<pre><code># First extract docs\ncocode repox --include-pattern \"*.md\" --output-filename docs.txt\n\n# Then summarize features\ncocode swe-from-file extract_features_recap results/docs.txt \\\n  --output-filename features.md\n</code></pre>"},{"location":"pages/examples/#github-operations","title":"GitHub operations","text":""},{"location":"pages/examples/#repository-management","title":"Repository management","text":"<pre><code># Check authentication\ncocode github auth\n\n# Get repo details\ncocode github repo-info pipelex/cocode\n\n# Check if feature branch exists\ncocode github check-branch pipelex/cocode feature/new-feature\n\n# List all branches\ncocode github list-branches pipelex/cocode --limit 20\n</code></pre>"},{"location":"pages/examples/#label-synchronization","title":"Label synchronization","text":"<pre><code># Preview label changes\ncocode github sync-labels pipelex/cocode ./labels.json --dry-run\n\n# Apply labels (keep existing)\ncocode github sync-labels pipelex/cocode ./labels.json\n\n# Full sync (remove extras)\ncocode github sync-labels pipelex/cocode ./labels.json --delete-extra\n</code></pre> <p>Example labels.json: <pre><code>[\n  {\n    \"name\": \"bug\",\n    \"color\": \"d73a4a\",\n    \"description\": \"Something isn't working\"\n  },\n  {\n    \"name\": \"enhancement\",\n    \"color\": \"a2eeef\",\n    \"description\": \"New feature or request\"\n  },\n  {\n    \"name\": \"documentation\",\n    \"color\": \"0075ca\",\n    \"description\": \"Improvements or additions to documentation\"\n  }\n]\n</code></pre></p>"},{"location":"pages/examples/#common-workflows","title":"Common workflows","text":""},{"location":"pages/examples/#full-project-analysis","title":"Full project analysis","text":"<pre><code># 1. Get structure\ncocode repox --output-style tree --output-filename structure.txt\n\n# 2. Extract interfaces\ncocode repox --python-rule interface --include-pattern \"*.py\" \\\n  --output-filename interfaces.txt\n\n# 3. Generate overview\ncocode swe-from-repo extract_fundamentals . \\\n  --output-filename overview.json\n</code></pre>"},{"location":"pages/examples/#pr-analysis","title":"PR analysis","text":"<pre><code># Analyze changes\ncocode swe-from-repo-diff write_changelog origin/main..HEAD . \\\n  --output-filename pr-changes.md\n</code></pre>"},{"location":"pages/examples/#clean-extraction","title":"Clean extraction","text":"<pre><code># Exclude common noise\ncocode repox \\\n  --include-pattern \"*.py\" \\\n  --exclude-pattern \"__pycache__\" \\\n  --exclude-pattern \"*.pyc\" \\\n  --exclude-pattern \".git\" \\\n  --exclude-pattern \"test_*\" \\\n  --python-rule interface \\\n  --output-filename clean-api.txt\n</code></pre>"},{"location":"pages/getting-started/","title":"Getting Started","text":""},{"location":"pages/getting-started/#requirements","title":"Requirements","text":"<ul> <li>Python \u2265 3.10</li> <li>pip</li> </ul>"},{"location":"pages/getting-started/#installation","title":"Installation","text":"<pre><code>pip install cocode\n</code></pre>"},{"location":"pages/getting-started/#setup","title":"Setup","text":"<p>Create a <code>.env</code> file with your API key:</p> <pre><code>OPENAI_API_KEY=sk-your-key-here\n\n# Optional\nANTHROPIC_API_KEY=sk-ant-your-key-here\nAWS_ACCESS_KEY_ID=your-aws-key\nAWS_SECRET_ACCESS_KEY=your-aws-secret\n</code></pre>"},{"location":"pages/getting-started/#basic-usage","title":"Basic usage","text":""},{"location":"pages/getting-started/#analyze-a-repository","title":"Analyze a repository","text":"<pre><code># Current directory\ncocode repox\n\n# Specific directory\ncocode repox /path/to/project\n\n# Save with custom name\ncocode repox --output-filename my-analysis.txt\n</code></pre>"},{"location":"pages/getting-started/#filter-files","title":"Filter files","text":"<pre><code># Python files only\ncocode repox --include-pattern \"*.py\"\n\n# Exclude tests\ncocode repox --exclude-pattern \"test_*\"\n\n# Specific directory\ncocode repox --path-pattern \"src\"\n</code></pre>"},{"location":"pages/getting-started/#python-processing-modes","title":"Python processing modes","text":"<pre><code># Extract interfaces (signatures + docstrings)\ncocode repox --python-rule interface --include-pattern \"*.py\"\n\n# Extract imports only\ncocode repox --python-rule imports --include-pattern \"*.py\"\n\n# Full code (default)\ncocode repox --python-rule integral --include-pattern \"*.py\"\n</code></pre>"},{"location":"pages/getting-started/#ai-analysis","title":"AI analysis","text":"<pre><code># Extract project overview\ncocode swe-from-repo extract_fundamentals .\n\n# Generate changelog from git diff\ncocode swe-from-repo-diff write_changelog v1.0.0 .\n\n# Extract features from text file\ncocode swe-from-file extract_features_recap analysis.txt\n</code></pre>"},{"location":"pages/getting-started/#output-styles","title":"Output styles","text":"<ul> <li><code>repo_map</code> (default) - Tree structure with file contents</li> <li><code>flat</code> - File contents only</li> <li><code>tree</code> - Directory structure only</li> <li><code>import_list</code> - Import statements (with imports rule)</li> </ul> <pre><code>cocode repox --output-style flat\n</code></pre>"},{"location":"pages/getting-started/#next-steps","title":"Next steps","text":"<ul> <li>See Commands for all available options</li> <li>Check Examples for common workflows </li> </ul>"}]}