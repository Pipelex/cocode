domain = "ai_instruction_update"
definition = "Pipeline for updating AI instruction files (AGENTS.md, CLAUDE.md, cursor rules) based on git diff"

[concept]
GitDiff = "A git diff output showing changes between two versions of a codebase"
DocumentationItem = "A specific change that needs AI instruction analysis"
DocumentationAnalysis = "Analysis of what AI instruction updates are needed"
DocumentationSuggestions = "Final suggestions for updating AI instruction files"

[pipe]

[pipe.identify_ai_instruction_changes]
PipeLLM = "Identify changes that affect AI instruction files"
inputs = { git_diff = "GitDiff" }
output = "DocumentationItem"
multiple_output = true
llm = "llm_for_large_text"
system_prompt = """
You are an AI instruction analyst. Only identify changes that affect AI agents and developers coding in this repository.
Focus on architectural changes, coding patterns, and AI-specific workflows.
"""
prompt_template = """
Analyze this git diff to identify changes that need AI instruction updates:

@git_diff

IDENTIFY CHANGES FOR AI INSTRUCTION FILES (AGENTS.md, CLAUDE.md, cursor rules):
- New AI-specific tools or workflows
- Major architectural changes affecting AI navigation
- New coding patterns or conventions
- Project structure changes affecting development
- New development tools or integrations

EXCLUDE:
- Simple CLI command changes for users
- Feature additions that don't affect AI workflows
- Version updates
- User-facing functionality that doesn't involve AI
- Internal refactoring without pattern changes

For each change, provide:
- File path where change occurred
- Change type (addition, deletion, modification, minor_change)
- Brief description of what changed
- Why AI instructions need updating
"""

[pipe.analyze_ai_instruction_change]
PipeLLM = "Analyze a single change for AI instruction impact"
inputs = { change_item = "DocumentationItem" }
output = "DocumentationAnalysis"
llm = "llm_for_large_text"
system_prompt = """
You are an AI instruction expert. Analyze code changes to determine what AI instruction updates are needed.
Focus on AGENTS.md, CLAUDE.md, and cursor rules files only.
"""
prompt_template = """
Analyze this change for AI instruction impact:

@change_item

Determine what AI instruction updates are needed:
- Change Category: Addition/Deletion/Modification/Minor_Change
- Affected Files: AGENTS.md, CLAUDE.md, or cursor rules files
- Content Location: Where in files to make changes
- Specific Content: Exact text to add/modify/remove
- Reasoning: Why this change affects AI instructions
"""

[pipe.generate_ai_instruction_suggestions]
PipeLLM = "Generate final AI instruction suggestions"
inputs = { ai_analyses = "DocumentationAnalysis" }
output = "DocumentationSuggestions"
llm = "llm_for_swe"
system_prompt = """
You are an AI instruction coordinator. Generate clear, actionable suggestions for updating AI instruction files.
Focus only on AGENTS.md, CLAUDE.md, and cursor rules.
"""
prompt_template = """
Generate AI instruction update suggestions:

@ai_analyses

Generate output in this format:

I have made changes to my codebase and need you to update the AI instruction files accordingly. Here's what changed and what needs to be updated:

## AI INSTRUCTION UPDATES (AGENTS.md, CLAUDE.md, cursor rules)

**Additions:**
[List significant additions with specific file paths and content]

**Deletions:**
[List significant deletions with specific file paths and content]

**Modifications:**
[List significant modifications with specific file paths and content]

**Minor Changes:**
[List minor changes with specific file paths and content]

Only include sections that have actual updates. Skip empty sections entirely.
Be specific about exact file paths, locations, and content needed.

If no AI instruction updates are needed, respond with:
"No AI instruction updates are needed based on the current code changes."
"""

[pipe.ai_instruction_update]
PipeSequence = "AI instruction update analysis"
inputs = { git_diff = "GitDiff" }
output = "DocumentationSuggestions"
steps = [
    { pipe = "identify_ai_instruction_changes", result = "ai_changes" },
    { pipe = "analyze_ai_instruction_change", batch_over = "ai_changes", batch_as = "change_item", result = "ai_analyses" },
    { pipe = "generate_ai_instruction_suggestions", result = "ai_suggestions" }
]

